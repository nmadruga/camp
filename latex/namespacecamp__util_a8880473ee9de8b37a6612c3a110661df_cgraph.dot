digraph "camp_util::loadtxt"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [label="camp_util::loadtxt",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Load a real array from a text file."];
  Node1 -> Node2 [color="steelblue1",style="solid"];
  Node2 [label="camp_util::assert_msg",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#ab4e745d4a05763568bf773598f30e91f",tooltip="Errors unless condition_ok is true."];
  Node2 -> Node3 [color="steelblue1",style="solid"];
  Node3 [label="camp_util::integer\l_to_string",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#acd72e4626dcfefffaa08c42cfa7949bc",tooltip="Convert an integer to a string format."];
  Node1 -> Node4 [color="steelblue1",style="solid"];
  Node4 [label="camp_util::close_file",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#a404c3cd8244ade45a4e57b2347d0f9a2",tooltip="Close a file and de-assign the unit."];
  Node4 -> Node5 [color="steelblue1",style="solid"];
  Node5 [label="camp_util::free_unit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#a3a68d4a7d1b28dd132909a12c83d3c21",tooltip="Frees a unit number returned by get_unit()."];
  Node1 -> Node3 [color="steelblue1",style="solid"];
  Node1 -> Node6 [color="steelblue1",style="solid"];
  Node6 [label="camp_util::open_file_read",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#aa871934a2e528c6b844a9ba1a761a317",tooltip="Open a file for reading with an automatically assigned unit and test that it succeeds...."];
  Node6 -> Node2 [color="steelblue1",style="solid"];
  Node6 -> Node7 [color="steelblue1",style="solid"];
  Node7 [label="camp_util::get_unit",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#a43662260b71cb7e4b72fe49ccb8cee94",tooltip="Returns an available unit number. This should be freed by free_unit()."];
  Node7 -> Node8 [color="steelblue1",style="solid"];
  Node8 [label="camp_util::die_msg",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#a970b40b46d26e937fb3cdc0b9217b86c",tooltip="Error immediately."];
  Node8 -> Node2 [color="steelblue1",style="solid"];
  Node7 -> Node7 [color="steelblue1",style="solid"];
  Node6 -> Node3 [color="steelblue1",style="solid"];
  Node1 -> Node9 [color="steelblue1",style="solid"];
  Node9 [label="camp_util::read_word_raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#ac20f84d4e2c6c3f2beafb7c31df79c7c",tooltip="Read a white-space delimited word from a file, signaling if we have EOL or EOF. If EOL or EOF are tru..."];
  Node9 -> Node10 [color="steelblue1",style="solid"];
  Node10 [label="camp_util::read_char_raw",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#ae0c20285a75bd4e58f46602f71fb871c",tooltip="Read a single character from a file, signaling if we have hit end-of-line (EOL) or end-of-file (EOF)...."];
  Node1 -> Node11 [color="steelblue1",style="solid"];
  Node11 [label="camp_util::reallocate\l_real_array2d",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#ab3209391c46c5ff14ca492c74f37223f",tooltip="Reallocate a 2D real array to the given size, preserving the contents."];
  Node1 -> Node12 [color="steelblue1",style="solid"];
  Node12 [label="camp_util::string_to_real",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$namespacecamp__util.html#a016ae1fd8b1d0e89d2d9f228e58c00f2",tooltip="Convert a string to a real."];
  Node12 -> Node2 [color="steelblue1",style="solid"];
  Node12 -> Node3 [color="steelblue1",style="solid"];
  Node12 -> Node12 [color="steelblue1",style="solid"];
}
